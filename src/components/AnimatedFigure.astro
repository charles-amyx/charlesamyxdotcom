---
const { class: className, fullWidth } = Astro.props;
---

<figure class:list={["my-8 not-prose", className, { "full-width": fullWidth }]}>
  <slot />
</figure>

<script>
  function loadImages() {
    document.querySelectorAll("figure img").forEach((img) => {
      // Force immediate load
      if (img instanceof HTMLImageElement) {
        img.loading = "eager";
        const src = img.getAttribute("src");
        if (src) {
          // Force reload the image
          img.src = src;
        }
      }
    });
  }

  function initAnimations() {
    // First load all images
    loadImages();

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-in");
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.1 }
    );

    document.querySelectorAll("figure").forEach((figure) => {
      observer.observe(figure);
    });
  }

  // Run immediately
  initAnimations();

  // Also run after navigation
  document.addEventListener("astro:after-swap", initAnimations);
</script>

<style is:global>
  figure {
    opacity: 0;
    transform: translateY(30px);
    transition:
      opacity 0.8s ease-out,
      transform 0.8s ease-out;
  }

  figure.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Ensure images are always visible */
  figure img {
    display: block;
    width: 100%;
    height: auto;
    opacity: 1 !important;
    visibility: visible !important;
  }
</style>
