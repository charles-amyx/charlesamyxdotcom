---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import { imageMap } from "../../lib/images";
import { formatDate, calculateMonthsBetween } from "../../lib/dateUtils";
import type { CollectionEntry } from "astro:content";

interface Props {
  project: CollectionEntry<"projects">;
  previous?: string;
  next?: string;
}

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  const sortedProjects = projects.sort((a, b) => {
    const dateA = a.data.date ? new Date(a.data.date).getTime() : 0;
    const dateB = b.data.date ? new Date(b.data.date).getTime() : 0;
    return dateB - dateA;
  });

  return sortedProjects.map((project, index) => ({
    params: { project: project.slug },
    props: {
      project,
      previous: sortedProjects[index + 1]?.slug,
      next: sortedProjects[index - 1]?.slug,
    },
  }));
}

const { project, previous, next } = Astro.props;
const { Content } = await project.render();

const imageModule = project.data.image
  ? imageMap[project.data.image]
  : undefined;
const formattedDate = project.data.date ? formatDate(project.data.date) : null;

const durationInMonths = project.data.duration
  ? calculateMonthsBetween(
      project.data.duration.split(" - ")[0],
      project.data.duration.split(" - ")[1]
    )
  : null;
---

<Layout title={`${project.data.title} | Charles E. Amyx, III`}>
  <article
    class="pt-12 md:pt-16 lg:pt-24 pb-12 md:pb-10 lg:pb-12 gap-6 transition-all duration-300 ease-in-out container mx-auto px-0 lg:px-4 flex-grow"
  >
    <!-- Project Header Section -->
    <div
      class="mx-auto grid grid-cols-1 text-base lg:rounded-2xl bg-muted lg:grid-cols-5"
    >
      <!-- Hero Image -->
      <div class="col-span-1 lg:col-span-3 p-4 lg:py-8 lg:pl-8">
        {
          imageModule && (
            <div class="aspect-w-16 aspect-h-9 overflow-hidden rounded-xl">
              <Image
                src={imageModule}
                alt={project.data.title}
                class="w-full h-full object-cover"
                loading="lazy"
              />
            </div>
          )
        }
      </div>

      <!-- Project Metadata -->
      <div
        class="col-span-1 font-normal w-full lg:col-span-2 px-4 py-8 lg:px-8 lg:py-10"
      >
        <div class="w-full mb-8 pb-2 border-b-2 border-dark relative">
          <div class="text-text text-xs xl:text-sm uppercase tracking-widest">
            {project.data.title}
          </div>
          <div
            class="text-text/90 text-2xl h-full xl:text-4xl w-fit font-bold relative tracking-normal font-neue before:content-[''] before:bg-primary/80 before:absolute before:left-0 before:bottom-[-10px] before:w-full before:h-[2px] z-10"
          >
            {project.data.client}
          </div>
        </div>

        <!-- Project Details -->
        <div class="space-y-4">
          <div class="grid grid-cols-2 w-full border-b border-gray-200">
            <div class="text-text/60 uppercase">Role&nbsp;</div>
            <div class="text-text/90">
              {project.data.type || "No type specified"}
            </div>
          </div>

          {
            formattedDate && (
              <div class="grid grid-cols-2 w-full border-b border-gray-200">
                <div class="text-text/60 uppercase">Date&nbsp;</div>
                <div class="text-text/90">{formattedDate}</div>
              </div>
            )
          }

          {
            durationInMonths && (
              <div class="grid grid-cols-2 w-full border-b border-gray-200">
                <div class="text-text/60 uppercase">Duration&nbsp;</div>
                <div class="text-text/90">{durationInMonths} months</div>
              </div>
            )
          }

          {
            project.data.skills && (
              <div class="grid grid-cols-2 w-full border-b border-gray-200">
                <div class="text-text/60 uppercase">Skills</div>
                <ul class="text-text/90 list-disc list-inside pb-2">
                  {project.data.skills.map((skill: string) => (
                    <li>{skill}</li>
                  ))}
                </ul>
              </div>
            )
          }
        </div>

        <!-- Project Description -->
        <div class="pt-8 prose prose-lg max-w-none text-text/90">
          {project.data.description}
        </div>

        <!-- Project URL -->
        {
          project.data.url && (
            <div class="pt-4">
              <a
                href={project.data.url.link}
                target="_blank"
                rel="noopener noreferrer"
                class="text-accent hover:text-primary transition-colors"
              >
                {project.data.url.label || "View Project"}
              </a>
            </div>
          )
        }
      </div>
    </div>

    <!-- Extended Process Content -->
    {
      project.data.hasProcessContent && (
        <div class="mx-auto max-w-4xl px-4 lg:px-8 mt-16">
          <div class="prose text-text/85 prose-lg prose-strong:text-text prose-headings:font-neue prose-headings:font-semibold prose-headings:text-text prose-h2:text-3xl prose-h2:mt-12 prose-p:text-lg prose-img:rounded-lg prose-img:shadow-md prose-img:my-12 prose-a:text-accent hover:prose-a:text-primary prose-a:transition-colors">
            <Content />
          </div>
        </div>
      )
    }

    <!-- Project Navigation -->
    <div class="mx-auto max-w-4xl px-4 lg:px-8 mt-16 flex justify-between">
      {
        next && (
          <a
            href={`/work/${next}`}
            class="text-accent hover:text-primary transition-colors"
          >
            ← Next Project
          </a>
        )
      }
      <a href="/work" class="text-accent hover:text-primary transition-colors">
        All Projects
      </a>
      {
        previous && (
          <a
            href={`/work/${previous}`}
            class="text-accent hover:text-primary transition-colors"
          >
            Previous Project →
          </a>
        )
      }
    </div>
  </article>
</Layout>

<style>
  .prose img + em {
    @apply block text-center text-sm text-text -mt-8 mb-12;
  }
</style>
